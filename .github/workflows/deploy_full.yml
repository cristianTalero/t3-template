name: Test, Sentry and deploy to Vercel

on:
  # push:
  #  branches: [main]
  # pull_request:
  #  branches: [main]
  workflow_dispatch:

env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
  SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

jobs:
  jest-tests:
    name: Jest testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Yarn cache
        uses: c-hive/gha-yarn-cache@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run tests
        run: yarn test:ci

  sentry-release:
    name: Sentry release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create Sentry release
        uses: getsentry/action-release@v1.0.0
        with:
          environment: production

  cypress-chromium:
    name: Cypress run on Chomium
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Yarn cache
        uses: c-hive/gha-yarn-cache@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}-

      - name: NextJS Cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          record: true
          config-file: true
          browser: chromium
          build: yarn build
          start: yarn start
          wait-on: http://localhost:3000
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload tests videos
        uses: actions/upload-artifact@v1
        if: failure() # / if: failure() <- more suitable for production
        with:
          name: cypress-chromium-videos
          path: cypress/videos

  cypress-chrome:
    name: Cypress run on Chrome
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Yarn cache
        uses: c-hive/gha-yarn-cache@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}-

      - name: NextJS Cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          record: true
          config-file: true
          browser: chrome
          build: yarn build
          start: yarn start
          wait-on: http://localhost:3000
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload tests videos
        uses: actions/upload-artifact@v1
        if: failure() # / if: failure() <- more suitable for production
        with:
          name: cypress-firefox-videos
          path: cypress/videos

  vercel:
    runs-on: ubuntu-latest
    name: 'Deploy application'
    needs: [cypress-chromium, cypress-chrome, sentry-release, jest-tests]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '16'
          registry-url: https://registry.npmjs.org/

      - name: 'Deploy to Vercel'
        run: |
          prodRun=""
          if [[ ${GITHUB_REF} == "refs/heads/main" ]]; then
            prodRun="--prod"
          fi

          npx vercel --token ${VERCEL_TOKEN} $prodRun
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
